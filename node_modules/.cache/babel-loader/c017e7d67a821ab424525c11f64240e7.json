{"remainingRequest":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/node_modules/babel-loader/lib/index.js!/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/src/views/todoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/src/views/todoList.vue","mtime":1639117728930},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["todoList.vue"],"names":[],"mappings":"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","sourcesContent":["\n<template>\n  <div class=\"about\"> \n    <Navbar></Navbar>  \n    <div class=\"m-20\">\n      \n      <div id=\"todo\">\n  <h2>客戶清單建立中  </h2>\n   \n\n\n<div class=\"grid grid-cols-2 gap-1\">\n  <div>\n    <form v-on:submit.prevent=\"addTodo\">\n    <input type=\"text\" \n           v-model=\"newTodo.text\" \n           placeholder=\"Add new todo\"\n           class=\"px-10 m-3 py-2 rounded-full bg-gray-100 \"\n           /> \n  </form> \n  </div> \n  <div>\n    <button class=\"text-lg text-gray-100 m-3 px-3 py-0.5 ml-4 rounded-full bg-red-400\"\n            v-on:click=\"addTodo\">新增</button>    \n  </div>\n</div> \n\n      <ul class=\"todo-list  \">\n        <li v-for=\"todo in todos\"\n            class=\"border-2 border-gray-200 rounded-full py-1 px-4 my-2\" > \n            <input type=\"text\" \n                    v-model=\"todo.text\" \n                    placeholder=\"Add new todo\"\n                    class=\"px-10 m-3 py-2 rounded-full bg-gray-100 focus:ring-2 focus:ring-blue-600 \"  />  \n\n            <button class=\"text-ms font-blod text-red-100 m-1 px-3 py-0.5 ml-4 rounded-full bg-red-400\"\n                  @click=\"removeTodo(todo.key)\">刪除</button>\n\n            <button class=\"bg-green-500 text-gray-900  text-ms font-blod \n                          m-1 px-3 py-0.5 ml-4 rounded-full \n                          hover:bg-green-700 hover:text-gray-100  \"\n                  @click=\"updateTodo(todo.key,todo)\">更新</button>   \n        </li> \n      </ul> \n    </div>\n  \n    </div>\n\n    {{ value3 }}\n    <hr>\n    \n    <div class=\"block\">\n  <span class=\"demonstration\">Display all tags (default)</span>\n  <el-cascader\n  v-model=\"value3\"\n    :options=\"options\"\n    :props=\"props\"\n    clearable></el-cascader>\n</div>\n\n\n\n     <div class=\"block\">\n    <span class=\"demonstration\">Default</span>\n    <el-date-picker\n      v-model=\"value1\"\n      multiple\n      type=\"date\"\n      placeholder=\"Pick a day\">\n    </el-date-picker>\n  </div>\n  <div class=\"block\">\n    <span class=\"demonstration\">Picker with quick options</span>\n    <el-date-picker\n      v-model=\"value2\"\n      type=\"date\"\n      placeholder=\"Pick a day\"\n      :picker-options=\"pickerOptions\">\n    </el-date-picker>\n  </div>\n\n  </div>\n\n\n  \n</template>\n\n\n<script>\nimport { WordDataServiceEXP } from \"../services/TodoService\";\n// import TutorialDetails from \"./WordMdf\"; // 連接至 Mdf 的部分\n\nexport default {\n  name: \"tutorials-list\",\n  components: {   },\n  data() {\n    return {\n      showModal:false,\n      todos: [], \n      newTodo:{ text:\"\",}, \n\n      // - - - - - \n\n      pickerOptions: {\n          disabledDate(time) {\n            return time.getTime() > Date.now();\n          },\n          shortcuts: [{\n            text: 'Today',\n            onClick(picker) {\n              picker.$emit('pick', new Date());\n            }\n          }, {\n            text: 'Yesterday',\n            onClick(picker) {\n              const date = new Date();\n              date.setTime(date.getTime() - 3600 * 1000 * 24);\n              picker.$emit('pick', date);\n            }\n          }, {\n            text: 'A week ago',\n            onClick(picker) {\n              const date = new Date();\n              date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\n              picker.$emit('pick', date);\n            }\n          }]\n        },\n        value1: '',\n        value2: '',\n        value3: '',\n\n        // - - - - - -\n\n         props: { multiple: true },\n        options: [{\n          value: 1,\n          label: 'Asia',\n          children: [{\n            value: 2,\n            label: 'China',\n            children: [\n              { value: 3, label: 'Beijing' },\n              { value: 4, label: 'Shanghai' },\n              { value: 5, label: 'Hangzhou' }\n            ]\n          }, {\n            value: 6,\n            label: 'Japan',\n            children: [\n              { value: 7, label: 'Tokyo' },\n              { value: 8, label: 'Osaka' },\n              { value: 9, label: 'Kyoto' }\n            ]\n          }, {\n            value: 10,\n            label: 'Korea',\n            children: [\n              { value: 11, label: 'Seoul' },\n              { value: 12, label: 'Busan' },\n              { value: 13, label: 'Taegu' }\n            ]\n          }]\n        }, {\n          value: 14,\n          label: 'Europe',\n          children: [{\n            value: 15,\n            label: 'France',\n            children: [\n              { value: 16, label: 'Paris' },\n              { value: 17, label: 'Marseille' },\n              { value: 18, label: 'Lyon' }\n            ]\n          }, {\n            value: 19,\n            label: 'UK',\n            children: [\n              { value: 20, label: 'London' },\n              { value: 21, label: 'Birmingham' },\n              { value: 22, label: 'Manchester' }\n            ]\n          }]\n        }, {\n          value: 23,\n          label: 'North America',\n          children: [{\n            value: 24,\n            label: 'US',\n            children: [\n              { value: 25, label: 'New York' },\n              { value: 26, label: 'Los Angeles' },\n              { value: 27, label: 'Washington' }\n            ]\n          }, {\n            value: 28,\n            label: 'Canada',\n            children: [\n              { value: 29, label: 'Toronto' },\n              { value: 30, label: 'Montreal' },\n              { value: 31, label: 'Ottawa' }\n            ]\n          }]\n        }] \n    };\n  },\n  methods: { \n    \n     // Push new post in to Todos\n    addTodo(){\n      WordDataServiceEXP.create(this.newTodo)\n      this.newTodo.text = ''\n\n    },\n    updateTodo(key, value) {\n      WordDataServiceEXP.getAll().child(key).update(value);\n      Swal.fire({\n              position: 'top',\n              icon: 'success',\n              title: '更新成功',\n              showConfirmButton: false,\n              timer: 1500\n            }); \n    },\n    // Remove child based on key - firebase function\n    removeTodo(key) {  \n      Swal.fire({\n            title: '真的嗎?',\n            text: \"請確認是否移除資料!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: '執行刪除!',\n            cancelButtonText: '取消',\n          }).then((result) => {\n            if (result.isConfirmed) {\n              Swal.fire(\n                '刪除成功!',\n                '你的資料，已完成刪除.',\n                'success'\n              ),\n              WordDataServiceEXP.getAll().child(key).remove()\n            }\n          }) \n    }, \n    updateTutorial() {\n      const data = {\n        title: this.currentTutorial.title,\n        description: this.currentTutorial.description,\n      };\n\n      WordDataServiceEXP.update(this.currentTutorial.key, data)\n        .then(() => {\n          this.message = \"更新成功!\";\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }, \n    onDataChange(items) {\n        let _tutorials = []; \n\n        items.forEach((item) => {\n          let key = item.key;\n          let data = item.val();\n          _tutorials.push({\n            key: key, \n            text  : data.text, \n          });\n        });\n        this.todos = _tutorials; \n    },   \n  },\n  watch: {\n     \n    // tutorial: function(tutorial) {\n    //   this.currentTutorial = { ...tutorial };\n    //   this.message = \"\";\n    // },\n  },\n  mounted() {\n    WordDataServiceEXP.getAll().on(\"value\", this.onDataChange); \n  },\n  beforeDestroy() {\n    WordDataServiceEXP.getAll().off(\"value\", this.onDataChange);\n  }\n}; \n\n</script>\n\n<style scoped>\n\n\n</style>>\n\n"],"sourceRoot":"src/views"}]}