{"remainingRequest":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/babel-loader/lib/index.js!/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/src/views/UpLoadFile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/src/views/UpLoadFile.vue","mtime":1639033700539},{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UpLoadFile.vue"],"names":[],"mappings":"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","sourcesContent":["\n<template>\n  <div class=\"\"> \n     \n    <div class=\"\">\n      \n       \n   <div class=\"row\">\n    <div class=\"col-12 text-center\">\n      <h1 class=\"mb-8\">上傳資料</h1>\n    </div>\n    <div class=\"col-md-8 offset-md-1\">\n      <h5>單一檔案上傳 </h5>\n<!-- {{ msg }} // {{ msg2 }} -->\n      \n      <!-- <button class=\"text-gray-900 text-xl font-black \n                            m-1 px-1 py-0.5 rounded-full \n                            bg-green-500\n                            hover:bg-blue-700 hover:text-gray-100  \"\n                  @click=\"uploadFile\">更新</button>    -->\n\n                     \n\n                  <!-- <button class=\"text-gray-900 text-xl font-black \n                            m-1 px-1 py-0.5 rounded-full \n                            bg-green-500\n                            hover:bg-blue-700 hover:text-gray-100  \"\n                  @click=\"g()\">get info</button>    -->\n\n\n      <form>\n        <div class=\"form-group\">  \n          <input type=\"file\"  \n                 @change=\"previewImage\" \n                 class=\"form-control-file\" \n                 id=\"my-file\">\n\n          <!-- <input type=\"file\" \n                 accept=\"image/*\" \n                 @change=\"previewImage\" \n                 class=\"form-control-file\" \n                 id=\"my-file\">\n     -->\n          <div class=\"border p-2 mt-3\">\n            <p>圖檔預覽:</p>\n            <template v-if=\"preview\">\n              <img :src=\"preview\" class=\"img-fluid\" />\n              <p class=\"mb-0\">file name: {{ image.name }}</p>\n              <p class=\"mb-0\">size: {{ image.size/1024 }}KB</p>\n            </template>\n          </div>\n        </div>\n      </form>\n\n     \n\n<div class=\"grid grid-cols-2 gap-1\">\n  <div> \n    <form v-on:submit.prevent=\"addTodo\"> \n      <input type=\"text\" \n            v-model=\"newTodo.name\" \n            placeholder=\"已上傳檔案名稱\"\n            class=\"px-10 m-1 py-2 rounded-full bg-gray-100 \"\n            />   \n\n      <select class=\"bg-blue-600 m-1 p-2 text-white text-center rounded-xl\" \n              v-model=\"newTodo.grade\" >\n        <option value=\"\" disabled>請選擇年級</option>\n        <option v-for=\"grade in grades\">{{ grade }}</option>\n      </select>\n\n      <select class=\"bg-blue-600 m-1 p-2 text-white text-center rounded-xl\" \n              v-model=\"newTodo.topic\" >\n        <option value=\"\" disabled>請選擇主題</option>\n        <option v-for=\"topic in topics\">{{ topic }}</option>  \n      </select>\n\n      <select class=\"bg-blue-600 m-1 p-2 text-white text-center rounded-xl\" \n              v-model=\"newTodo.FileType\" >\n        <option value=\"\" disabled>請選擇資料類別</option>\n        <option v-for=\"FileType in FileTypes\">{{ FileType }}</option>  \n      </select>\n\n      <select class=\"bg-blue-600 m-1 p-2 text-white text-center rounded-xl\" \n              v-model=\"newTodo.UseToken\" >\n        <option value=\"\" disabled>權限設定</option>\n        <option v-for=\"UseToken in UseTokens\">{{ UseToken}}</option>  \n      </select>\n\n      <select class=\"bg-blue-600 m-1 p-2 text-white text-center rounded-xl\" \n              v-model=\"newTodo.DocType\" >\n        <option value=\"\" disabled>文件類別</option>\n        <option v-for=\"DocType in DocTypes\">{{ DocType }}</option>  \n      </select>\n\n   </form> \n  </div> \n  <div>\n    <button class=\"text-lg text-gray-100 m-3 px-3 py-0.5 ml-4 rounded-full bg-red-400\"\n            v-on:click=\"addTodo()\">確認新增</button>    \n            <button class=\"text-gray-900 text-xl font-black \n                            m-3 px-3 py-0.5 ml-4 rounded-full \n                            bg-green-500\n                            hover:bg-blue-700 hover:text-gray-100  \"\n                  @click=\"d()\"> 刪除上傳資料 </button> \n  </div>\n</div>\n\n <hr>\n已上傳內容：\n      <!-- <ul class=\"todo-list  \"> -->\n        <ul class=\"todo-list  \">\n        <li v-for=\"todo in todos\"\n            class=\"border-2 border-gray-200 rounded-full py-1 px-4 my-2\" > \n            檔案名稱：\n            <input type=\"text\" \n                    v-model=\"todo.name\" \n                    placeholder=\"Add new todo\"\n                    class=\"px-10 m-1 py-1 rounded-full bg-gray-100 focus:ring-2 focus:ring-blue-600 \"  />  \n               \n             <!-- <select class=\"bg-blue-600 m-1 p-2 text-white text-center rounded-xl\" \n                     v-model=\"newTodo.grade\" >\n              <option value=\"\" disabled>請選擇年級</option>\n              <option v-for=\"grade in grades\">{{ grade }}</option>\n            </select>\n\n            <select class=\"bg-blue-600 m-1 p-2 text-white text-center rounded-xl\" \n                    v-model=\"newTodo.topic\" >\n              <option value=\"\" disabled>請選擇主題</option>\n              <option v-for=\"topic in topics\">{{ topic }}</option>  \n            </select> -->\n\n            <button class=\"text-ms font-blod text-gray-100 m-1 px-3 py-0.5 ml-4 rounded-full bg-red-400\"\n                  @click=\"removeTodo(todo.key)\">刪除</button>\n  \n            <button  class=\"text-ms font-blod text-gray-100 m-1 px-3 py-0.5 ml-4 rounded-full bg-blue-400\"\n                              @click=\"ReadFile(todo.name)\"> 前往</button>\n                   \n\n            <button class=\"bg-green-500 text-gray-900  text-ms font-blod \n                          m-1 px-3 py-0.5 ml-4 rounded-full \n                          hover:bg-green-700 hover:text-gray-100  \"\n                  @click=\"updateTodo(todo.key,todo)\">更新</button>   \n        </li> \n      </ul> \n    </div>\n    \n    <!-- <div class=\"col-md-5\">\n      <h5>2. multiple file</h5>\n      <form>\n        <div class=\"form-group\">\n          <label for=\"my-file\">Select Image</label>\n          <input type=\"file\" accept=\"image/*\" multiple=\"multiple\" @change=\"previewMultiImage\" class=\"form-control-file\" id=\"my-file\">\n    \n          <div class=\"border p-2 mt-3\">\n            <p>Preview Here:</p>\n            <template v-if=\"preview_list.length\">\n              <div v-for=\"item, index in preview_list\" :key=\"index\">\n                <img :src=\"item\" class=\"img-fluid\" />\n                <p class=\"mb-0\">file name: {{ image_list[index].name }}</p>\n                <p>size: {{ image_list[index].size/1024 }}KB</p>\n              </div>\n            </template>\n          </div>\n        </div>\n      </form>\n    </div> -->  \n   </div> \n  </div>\n</div> \n</template>\n\n\n<script>\nimport { WordDataServiceEXP } from \"../services/imgService\";\nimport firebase from 'firebase/app';\n// import TutorialDetails from \"./WordMdf\"; // 連接至 Mdf 的部分\n// import {fb} from '../firebase';\nexport default {\n  name: \"tutorials-list\",\n  components: {   },\n  data() {\n    return {\n\n      showModal:false,\n      todos: [], \n      UURL:\"\",   \n \n      topics:    ['山林生態','燒墾','河流生態','入倉祭','收割祭','播種祭','祖靈祭','部落社會','遷徒史','建築','竹籐籐編','樂舞','播種祭','照顧小米','編織','狩獵',],\n      grades:    ['1年級', '2年級', '3年級','4年級', '5年級', '6年級'],\n      FileTypes: ['Youtube連結', '聲音檔', 'PDF文件','PPT投影片', '其他', '機密文件'],\n      UseTokens: ['限校內使用', '可開放校外', '正在編輯中', '封存停用'],\n      DocTypes:   ['教案','影片紀錄','計畫書','公用空白文件','教學札記','校內活動','校外比賽','校外參訪'],\n      \n      selected: '',\n\n      newTodo:{  \n          topic:\"\",\n          grade:\"\",\n          FileType:\"\",\n          UseToken:\"\",\n          Type:\"\",\n          DocType:\"\",\n          name:\"\",\n          pxNote:\"\",\n          creatDateTime:\"\",\n          }, \n\n      preview: null,\n      image: null,\n      preview_list: [],\n      image_list: [],\n      msg:\"執行中\",\n      msg2:\"檔案路徑\",\n    };\n  },\n  methods: {\n    ReadFile(key){  \n      firebase.storage().ref(key).getDownloadURL().then(function(url) {\n          console.log(\".ReadFile ==\" + url);  \n          location.href=url;\n           \n         \n          \n      })\n    }\n    ,\n    g(){  // .ref 指向已存在 storage 中的檔案位置後 可以透過 getDownloadURL 取得連結\n          firebase.storage().ref(this.msg2).getDownloadURL().then(function(url) {\n          console.log(\".url==\" + url);  \n          let URL = url\n\n          this.UURL = URL;\n       });  \n    }, \n    d(){  firebase.storage().ref(this.msg2).delete();\n    },\n    previewImage: function(event) {\n      var input = event.target;\n      if (input.files) {\n        var reader = new FileReader();\n        reader.onload = (e) => {\n          console.log(\".Done...00\");\n          this.preview = e.target.result;\n          // 進行修改...\n          // var blob = new Blob([e.target.result], { type: \"image/jpeg\" });\n          // var storageUrl = 'noticias/imagenes/';\n          var storageUrl ='';\n          var storageRef = firebase.storage().ref(storageUrl + input.files[0].name);\n          // var storageRef2 = firebase.storage().ref(storageUrl + input.files[0]);\n          console.warn(input.files[0]); // Watch Screenshot\n          storageRef.put(input.files[0]);\n          this.newTodo.name = storageUrl + input.files[0].name;\n          this.msg2 = storageUrl + input.files[0].name; \n          console.log(\".msg2...\" + this.msg2 ); \n          this.setTimeoutFun(); \n        };\n        this.image=input.files[0];\n        reader.readAsDataURL(input.files[0]); \n        console.log(\".Done...2\");  \n      }\n    },\n    setTimeoutFun() { \n      this.timeOutProcessId = setTimeout(() => {\n        this.g();\n        \n        \n        // this.addTodo();\n      }, 3000);\n      // 在 三秒後 顯示\n      // this.timeOutRefresh = window.setInterval(() => {\n      //   console.log('每五秒要做的事');\n      // }, 5000);\n    },  \n    previewMultiImage: function(event) {\n      var input = event.target;\n      var count = input.files.length;\n      var index = 0;\n      if (input.files) {\n        while(count --) {\n          var reader = new FileReader();\n          reader.onload = (e) => {\n            this.preview_list.push(e.target.result);\n          }\n          this.image_list.push(input.files[index]);\n          reader.readAsDataURL(input.files[index]);\n          index ++;\n        }\n      }\n    },\n    reset: function() {\n      this.image = null;\n      this.preview = null;\n      this.image_list = [];\n      this.preview_list = [];\n    },\n    uploadFile(){ \n      console.log(\".put() 方法把東西丟到該位置裡\" + this.image.name); \n      const path = \"/demo/\" + this.image.name;\n      WordDataServiceEXP.putST(path,this.image.name); \n      console.log(\".put() 方法把東西丟到該位置裡....\"+ path);  \n    },\n    addTodo(){ \n      \n      // this.newTodo.pxNote = this.msg2;\n      WordDataServiceEXP.create(this.newTodo);\n\n      // 這邊是設定後 歸零。\n      // this.newTodo.name = \"\";\n      // this.newTodo.pxNote = \"\";\n      // this.newTodo.DocType = \"\";\n      // this.newTodo.grade = \"\";\n      Swal.fire({\n              position: 'top',\n              icon: 'success',\n              title: '更新成功',\n              showConfirmButton: false,\n              timer: 1500\n            }); \n    },\n    updateTodo(key, value) {\n      WordDataServiceEXP.getAll().child(key).update(value);\n      Swal.fire({\n              position: 'top',\n              icon: 'success',\n              title: '更新成功',\n              showConfirmButton: false,\n              timer: 1500\n            }); \n    },\n    // Remove child based on key - firebase function\n    removeTodo(key) {  \n      Swal.fire({\n            title: '真的嗎?',\n            text: \"請確認是否移除資料!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: '執行刪除!',\n            cancelButtonText: '取消',\n          }).then((result) => {\n            if (result.isConfirmed) {\n              Swal.fire(\n                '刪除成功!',\n                '你的資料，已完成刪除.',\n                'success'\n              ),\n              WordDataServiceEXP.getAll().child(key).remove()\n            }\n          }) \n    }, \n    onDataChange(items) {\n        let _tutorials = []; \n\n        items.forEach((item) => {\n          let key = item.key;\n          let data = item.val();\n          _tutorials.push({\n            key: key,  \n            name   : data.name, \n            pxNote :data.pxNote, \n\n            topic: data.topic,\n            grade: data.grade,   \n            DocType:data.DocType,\n          });\n        });\n        this.todos = _tutorials; \n    },  \n\n  },\n  watch: {\n   \n  },\n  mounted() {\n    WordDataServiceEXP.getAll().on(\"value\", this.onDataChange); \n  },\n  beforeDestroy() {\n    WordDataServiceEXP.getAll().off(\"value\", this.onDataChange);\n  }\n}; \n\n</script>\n\n<style scoped>\n\n\n</style>>\n\n"],"sourceRoot":"src/views"}]}