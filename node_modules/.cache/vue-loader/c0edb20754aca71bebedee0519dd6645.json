{"remainingRequest":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/src/components/Navbar.vue?vue&type=template&id=41458b80&scoped=true&","dependencies":[{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/src/components/Navbar.vue","mtime":1639033922463},{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}