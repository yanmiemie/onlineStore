{"remainingRequest":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/src/views/News.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/src/views/News.vue","mtime":1638997928917},{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/_V/auth/clone/vue_shop_v1207/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IFdvcmREYXRhU2VydmljZUVYUCB9IGZyb20gIi4uL3NlcnZpY2VzL2ltZ1NlcnZpY2UiOwppbXBvcnQgZmlyZWJhc2UgZnJvbSAnZmlyZWJhc2UvYXBwJzsKLy8gaW1wb3J0IFR1dG9yaWFsRGV0YWlscyBmcm9tICIuL1dvcmRNZGYiOyAvLyDpgKPmjqXoh7MgTWRmIOeahOmDqOWIhgovLyBpbXBvcnQge2ZifSBmcm9tICcuLi9maXJlYmFzZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAidHV0b3JpYWxzLWxpc3QiLAogIGNvbXBvbmVudHM6IHsgICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwcmV2aWV3OiBudWxsLAogICAgICBpbWFnZTogbnVsbCwKICAgICAgcHJldmlld19saXN0OiBbXSwKICAgICAgaW1hZ2VfbGlzdDogW10sCiAgICAgIG1zZzoi5Z+36KGM5LitIiwKICAgICAgbXNnMjoi5qqU5qGI6Lev5b6RIiwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnKCl7IAogICAgICAvLyAucmVmIOaMh+WQkeW3suWtmOWcqCBzdG9yYWdlIOS4reeahOaqlOahiOS9jee9ruW+jCDlj6/ku6XpgI/pgY4gZ2V0RG93bmxvYWRVUkwg5Y+W5b6X6YCj57WQCiAgICAgIGZpcmViYXNlLnN0b3JhZ2UoKS5yZWYodGhpcy5tc2cyKS5nZXREb3dubG9hZFVSTCgpLnRoZW4oZnVuY3Rpb24odXJsKSB7CiAgICAgIGNvbnNvbGUubG9nKCIudXJsPT0iICsgdXJsKTsgCiAgICAgICAgfSk7ICAKICAgIH0sIAogICAgZCgpeyBmaXJlYmFzZS5zdG9yYWdlKCkucmVmKHRoaXMubXNnMikuZGVsZXRlKCk7IH0sCiAgICBwcmV2aWV3SW1hZ2U6IGZ1bmN0aW9uKGV2ZW50KSB7CiAgICAgIHZhciBpbnB1dCA9IGV2ZW50LnRhcmdldDsKICAgICAgaWYgKGlucHV0LmZpbGVzKSB7CiAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZygiLkRvbmUuLi4wMCIpOwogICAgICAgICAgdGhpcy5wcmV2aWV3ID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgICAgLy8g6YCy6KGM5L+u5pS5Li4uCiAgICAgICAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKFtlLnRhcmdldC5yZXN1bHRdLCB7IHR5cGU6ICJpbWFnZS9qcGVnIiB9KTsKICAgICAgICAgIC8vIHZhciBzdG9yYWdlVXJsID0gJ25vdGljaWFzL2ltYWdlbmVzLyc7CiAgICAgICAgICB2YXIgc3RvcmFnZVVybCA9Jyc7CiAgICAgICAgICB2YXIgc3RvcmFnZVJlZiA9IGZpcmViYXNlLnN0b3JhZ2UoKS5yZWYoc3RvcmFnZVVybCArIGlucHV0LmZpbGVzWzBdLm5hbWUpOwogICAgICAgICAgdmFyIHN0b3JhZ2VSZWYyID0gZmlyZWJhc2Uuc3RvcmFnZSgpLnJlZihzdG9yYWdlVXJsICsgaW5wdXQuZmlsZXNbMF0pOwogICAgICAgICAgY29uc29sZS53YXJuKGlucHV0LmZpbGVzWzBdKTsgLy8gV2F0Y2ggU2NyZWVuc2hvdAogICAgICAgICAgc3RvcmFnZVJlZi5wdXQoaW5wdXQuZmlsZXNbMF0pOwogICAgICAgICAgdGhpcy5tc2cyID0gc3RvcmFnZVVybCArIGlucHV0LmZpbGVzWzBdLm5hbWU7CgogICAgICAgICAgY29uc29sZS5sb2coIi5tc2cyLi4uIiArIHRoaXMubXNnMiApOwogCiAgICAgICAgICB0aGlzLnNldFRpbWVvdXRGdW4oKTsKCiAgICAgICAgfTsKICAgICAgICB0aGlzLmltYWdlPWlucHV0LmZpbGVzWzBdOwogICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGlucHV0LmZpbGVzWzBdKTsKCmNvbnNvbGUubG9nKCIuRG9uZS4uLjIiKTsKICAgICAgICAgIAoKIAogICAgICB9CiAgICB9LAogICAgc2V0VGltZW91dEZ1bigpIHsgCiAgICAgIHRoaXMudGltZU91dFByb2Nlc3NJZCA9IHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIHRoaXMuZygpOwogICAgICB9LCAzMDAwKTsKICAgICAgLy8g5ZyoIOS4ieenkuW+jCDpoa/npLoKICAgICAgLy8gdGhpcy50aW1lT3V0UmVmcmVzaCA9IHdpbmRvdy5zZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgIC8vICAgY29uc29sZS5sb2coJ+avj+S6lOenkuimgeWBmueahOS6iycpOwogICAgICAvLyB9LCA1MDAwKTsKICAgIH0sICAKICAgIHByZXZpZXdNdWx0aUltYWdlOiBmdW5jdGlvbihldmVudCkgewogICAgICB2YXIgaW5wdXQgPSBldmVudC50YXJnZXQ7CiAgICAgIHZhciBjb3VudCA9IGlucHV0LmZpbGVzLmxlbmd0aDsKICAgICAgdmFyIGluZGV4ID0gMDsKICAgICAgaWYgKGlucHV0LmZpbGVzKSB7CiAgICAgICAgd2hpbGUoY291bnQgLS0pIHsKICAgICAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgICAgIHRoaXMucHJldmlld19saXN0LnB1c2goZS50YXJnZXQucmVzdWx0KTsKICAgICAgICAgIH0KICAgICAgICAgIHRoaXMuaW1hZ2VfbGlzdC5wdXNoKGlucHV0LmZpbGVzW2luZGV4XSk7CiAgICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChpbnB1dC5maWxlc1tpbmRleF0pOwogICAgICAgICAgaW5kZXggKys7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgcmVzZXQ6IGZ1bmN0aW9uKCkgewogICAgICB0aGlzLmltYWdlID0gbnVsbDsKICAgICAgdGhpcy5wcmV2aWV3ID0gbnVsbDsKICAgICAgdGhpcy5pbWFnZV9saXN0ID0gW107CiAgICAgIHRoaXMucHJldmlld19saXN0ID0gW107CiAgICB9LAogICAgdXBsb2FkRmlsZSgpewogICAgICAvL+WPluW+l+aqlOahiOizh+ioigogICAgICAvLyBjb25zdCBmaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzWzBdOwoKICAgICAgLy8g6Lev5b6R5YyF5ZCr5qqU5qGI5ZCN56ix57WmLnJlZuaMh+WQkeato+eiuuS9jee9rgogICAgICAvLyB0aGlzLmltYWdlLm5hbWUgPSBmaWxlLm5hbWU7CgogICAgICAvLyDmqpTmoYjlkI3nqLHlnKjkuIvovInmmYLmnIPnlKjliLAKICAgICAgLy8gbmFtZSA9IGZpbGUubmFtZTsKY29uc29sZS5sb2coIi5wdXQoKSDmlrnms5XmiormnbHopb/kuJ/liLDoqbLkvY3nva7oo6EiICsgdGhpcy5pbWFnZS5uYW1lKTsKICAgICAgLy8g5Y+W5b6XIHN0b3JhZ2Ug5Lit5bCN5oeJ55qE5L2N572uCiAgICAgIC8vIGNvbnN0IHN0b3JhZ2VSZWZlcmVuY2UgPSBmaXJlYmFzZS5zdG9yYWdlKCkucmVmKGZ1bGxQYXRoKTsKICAgICAgLy8gY29uc3Qgc3RvcmFnZVJlZmVyZW5jZSA9IGZiLnN0b3JhZ2UoKS5yZWYodGhpcy5pbWFnZS5uYW1lKTsKCgogICAgICAvLyBjb25zdCBzdG9yYWdlUmVmZXJlbmNlID0gV29yZERhdGFTZXJ2aWNlRVhQLmdldFNUKCkucmVmKHRoaXMuaW1hZ2UubmFtZSk7CiAgICAgIAogICAgICAvLyAKICAgICAgLy8gc3RvcmFnZVJlZmVyZW5jZS5wdXQodGhpcy5pbWFnZS5uYW1lKTsKICAgICAgY29uc3QgcGF0aCA9ICIvZGVtby8iICsgdGhpcy5pbWFnZS5uYW1lOwogICAgICBXb3JkRGF0YVNlcnZpY2VFWFAucHV0U1QocGF0aCx0aGlzLmltYWdlLm5hbWUpOwogICAgICAKICAgICAgY29uc29sZS5sb2coIi5wdXQoKSDmlrnms5XmiormnbHopb/kuJ/liLDoqbLkvY3nva7oo6EuLi4uIisgcGF0aCk7CiAgICAgIC8vIGNvbnN0IHRhc2sgPSBzdG9yYWdlUmVmZXJlbmNlLnB1dCh0aGlzLmltYWdlLm5hbWUpOwoKICAgICAgLy8gLm9uKCnnm6Pogb3kuKbpgKPli5UgcHJvZ3Jlc3Mg6K6A5Y+W5qKdCiAgICAgIC8vIHRhc2sub24oCiAgICAgIC8vICAgInN0YXRlX2NoYW5nZWQiLAogICAgICAgIC8vIGZ1bmN0aW9uIHByb2dyZXNzKHNuYXBzaG90KSB7CiAgICAgICAgLy8gICBsZXQgdXBsb2FkVmFsdWUgPSBzbmFwc2hvdC5ieXRlc1RyYW5zZmVycmVkIC8gc25hcHNob3QudG90YWxCeXRlcyAqIDEwMDsKICAgICAgICAvLyAgIHVwbG9hZGVyLnZhbHVlID0gdXBsb2FkVmFsdWU7CiAgICAgICAgLy8gfSwKICAgICAgICAvLyBmdW5jdGlvbiBlcnJvcihlcnIpIHsKICAgICAgICAvLyAgIHRoaXMubXNnLnRleHRDb250ZW50ID0gIuS4iuWCs+WkseaVlyI7CiAgICAgICAgLy8gfSwKICAgICAgLy8gICBmdW5jdGlvbiBjb21wbGV0ZSgpIHsKICAgICAgLy8gICAgIHRoaXMubXNnLnRleHRDb250ZW50ID0gIuS4iuWCs+aIkOWKnyI7CiAgICAgIC8vICAgfQogICAgICAvLyApOwogCiAKICAvLyAucmVmIOaMh+WQkeW3suWtmOWcqCBzdG9yYWdlIOS4reeahOaqlOahiOS9jee9ruW+jCDlj6/ku6XpgI/pgY4gZ2V0RG93bmxvYWRVUkwg5Y+W5b6X6YCj57WQCiAgLy8gc3RvcmFnZVJlZmVyZW5jZS5nZXREb3dubG9hZFVSTCgpLnRoZW4oZnVuY3Rpb24odXJsKSB7CiAgLy8gICB0aGlzLm1zZzIudGV4dENvbnRlbnQgPSAi5LiL6LyJ5LitIiArIHVybDt9KTsKICAgICAgCgogICAgfSwKICB9LAogIHdhdGNoOiB7CiAgIAogIH0sCiAgLy8gbW91bnRlZCgpIHsKICAvLyAgIFdvcmREYXRhU2VydmljZUVYUC5nZXRBbGwoKS5vbigidmFsdWUiLCB0aGlzLm9uRGF0YUNoYW5nZSk7IAogIC8vIH0sCiAgLy8gYmVmb3JlRGVzdHJveSgpIHsKICAvLyAgIFdvcmREYXRhU2VydmljZUVYUC5nZXRBbGwoKS5vZmYoInZhbHVlIiwgdGhpcy5vbkRhdGFDaGFuZ2UpOwogIC8vIH0KfTsgCgo="},{"version":3,"sources":["News.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"News.vue","sourceRoot":"src/views","sourcesContent":["\n<template>\n  <div class=\"about\"> \n    <Navbar></Navbar>  \n    <div class=\"m-20\">\n      \n       \n   <div class=\"row\">\n    <div class=\"col-12 text-center\">\n      <h1 class=\"mb-3\">Upload Image</h1>\n    </div>\n    <div class=\"col-md-5 offset-md-1\">\n      <h5>1. single file {{ msg }} // {{ msg2 }}</h5>\n      <button class=\"text-gray-900 text-xl font-black \n                            m-1 px-1 py-0.5 rounded-full \n                            bg-green-500\n                            hover:bg-blue-700 hover:text-gray-100  \"\n                  @click=\"uploadFile\">更新</button>   \n\n                   <button class=\"text-gray-900 text-xl font-black \n                            m-1 px-1 py-0.5 rounded-full \n                            bg-green-500\n                            hover:bg-blue-700 hover:text-gray-100  \"\n                  @click=\"d()\">刪除</button>   \n\n                  <button class=\"text-gray-900 text-xl font-black \n                            m-1 px-1 py-0.5 rounded-full \n                            bg-green-500\n                            hover:bg-blue-700 hover:text-gray-100  \"\n                  @click=\"g()\">get</button>   \n\n\n      <form>\n        <div class=\"form-group\">\n\n\n\n\n          <label for=\"my-file\">Select Image</label>\n          <input type=\"file\" \n                 accept=\"image/*\" \n                 @change=\"previewImage\" \n                 class=\"form-control-file\" \n                 id=\"my-file\">\n    \n          <div class=\"border p-2 mt-3\">\n            <p>Preview Here:</p>\n            <template v-if=\"preview\">\n              <img :src=\"preview\" class=\"img-fluid\" />\n              <p class=\"mb-0\">file name: {{ image.name }}</p>\n              <p class=\"mb-0\">size: {{ image.size/1024 }}KB</p>\n            </template>\n          </div>\n        </div>\n      </form>\n    </div>\n    \n    <!-- <div class=\"col-md-5\">\n      <h5>2. multiple file</h5>\n      <form>\n        <div class=\"form-group\">\n          <label for=\"my-file\">Select Image</label>\n          <input type=\"file\" accept=\"image/*\" multiple=\"multiple\" @change=\"previewMultiImage\" class=\"form-control-file\" id=\"my-file\">\n    \n          <div class=\"border p-2 mt-3\">\n            <p>Preview Here:</p>\n            <template v-if=\"preview_list.length\">\n              <div v-for=\"item, index in preview_list\" :key=\"index\">\n                <img :src=\"item\" class=\"img-fluid\" />\n                <p class=\"mb-0\">file name: {{ image_list[index].name }}</p>\n                <p>size: {{ image_list[index].size/1024 }}KB</p>\n              </div>\n            </template>\n          </div>\n        </div>\n      </form>\n    </div> -->\n    \n    \n   \n  </div>\n  \n  </div>\n</div>\n    \n  \n  \n      \n  \n</template>\n\n\n<script>\nimport { WordDataServiceEXP } from \"../services/imgService\";\nimport firebase from 'firebase/app';\n// import TutorialDetails from \"./WordMdf\"; // 連接至 Mdf 的部分\n// import {fb} from '../firebase';\nexport default {\n  name: \"tutorials-list\",\n  components: {   },\n  data() {\n    return {\n      preview: null,\n      image: null,\n      preview_list: [],\n      image_list: [],\n      msg:\"執行中\",\n      msg2:\"檔案路徑\",\n    };\n  },\n  methods: {\n    g(){ \n      // .ref 指向已存在 storage 中的檔案位置後 可以透過 getDownloadURL 取得連結\n      firebase.storage().ref(this.msg2).getDownloadURL().then(function(url) {\n      console.log(\".url==\" + url); \n        });  \n    }, \n    d(){ firebase.storage().ref(this.msg2).delete(); },\n    previewImage: function(event) {\n      var input = event.target;\n      if (input.files) {\n        var reader = new FileReader();\n        reader.onload = (e) => {\n          console.log(\".Done...00\");\n          this.preview = e.target.result;\n          // 進行修改...\n          var blob = new Blob([e.target.result], { type: \"image/jpeg\" });\n          // var storageUrl = 'noticias/imagenes/';\n          var storageUrl ='';\n          var storageRef = firebase.storage().ref(storageUrl + input.files[0].name);\n          var storageRef2 = firebase.storage().ref(storageUrl + input.files[0]);\n          console.warn(input.files[0]); // Watch Screenshot\n          storageRef.put(input.files[0]);\n          this.msg2 = storageUrl + input.files[0].name;\n\n          console.log(\".msg2...\" + this.msg2 );\n \n          this.setTimeoutFun();\n\n        };\n        this.image=input.files[0];\n        reader.readAsDataURL(input.files[0]);\n\nconsole.log(\".Done...2\");\n          \n\n \n      }\n    },\n    setTimeoutFun() { \n      this.timeOutProcessId = setTimeout(() => {\n        this.g();\n      }, 3000);\n      // 在 三秒後 顯示\n      // this.timeOutRefresh = window.setInterval(() => {\n      //   console.log('每五秒要做的事');\n      // }, 5000);\n    },  \n    previewMultiImage: function(event) {\n      var input = event.target;\n      var count = input.files.length;\n      var index = 0;\n      if (input.files) {\n        while(count --) {\n          var reader = new FileReader();\n          reader.onload = (e) => {\n            this.preview_list.push(e.target.result);\n          }\n          this.image_list.push(input.files[index]);\n          reader.readAsDataURL(input.files[index]);\n          index ++;\n        }\n      }\n    },\n    reset: function() {\n      this.image = null;\n      this.preview = null;\n      this.image_list = [];\n      this.preview_list = [];\n    },\n    uploadFile(){\n      //取得檔案資訊\n      // const file = event.target.files[0];\n\n      // 路徑包含檔案名稱給.ref指向正確位置\n      // this.image.name = file.name;\n\n      // 檔案名稱在下載時會用到\n      // name = file.name;\nconsole.log(\".put() 方法把東西丟到該位置裡\" + this.image.name);\n      // 取得 storage 中對應的位置\n      // const storageReference = firebase.storage().ref(fullPath);\n      // const storageReference = fb.storage().ref(this.image.name);\n\n\n      // const storageReference = WordDataServiceEXP.getST().ref(this.image.name);\n      \n      // \n      // storageReference.put(this.image.name);\n      const path = \"/demo/\" + this.image.name;\n      WordDataServiceEXP.putST(path,this.image.name);\n      \n      console.log(\".put() 方法把東西丟到該位置裡....\"+ path);\n      // const task = storageReference.put(this.image.name);\n\n      // .on()監聽並連動 progress 讀取條\n      // task.on(\n      //   \"state_changed\",\n        // function progress(snapshot) {\n        //   let uploadValue = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        //   uploader.value = uploadValue;\n        // },\n        // function error(err) {\n        //   this.msg.textContent = \"上傳失敗\";\n        // },\n      //   function complete() {\n      //     this.msg.textContent = \"上傳成功\";\n      //   }\n      // );\n \n \n  // .ref 指向已存在 storage 中的檔案位置後 可以透過 getDownloadURL 取得連結\n  // storageReference.getDownloadURL().then(function(url) {\n  //   this.msg2.textContent = \"下載中\" + url;});\n      \n\n    },\n  },\n  watch: {\n   \n  },\n  // mounted() {\n  //   WordDataServiceEXP.getAll().on(\"value\", this.onDataChange); \n  // },\n  // beforeDestroy() {\n  //   WordDataServiceEXP.getAll().off(\"value\", this.onDataChange);\n  // }\n}; \n\n</script>\n\n<style scoped>\n\n\n</style>>\n\n"]}]}