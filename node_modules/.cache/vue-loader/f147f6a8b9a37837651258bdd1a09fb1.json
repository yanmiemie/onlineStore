{"remainingRequest":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/src/views/DC.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/src/views/DC.vue","mtime":1651213509822},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/YanmieemieHpage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DC.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DC.vue","sourceRoot":"src/views","sourcesContent":["\n<template>\n  <div class=\"about\"> \n    <Navbar></Navbar>  \n    <div class=\"m-20\">\n      \n      <div id=\"todo\">\n  <h2>客戶清單建立中 , 時間：{{ newTodo.creatTime }} </h2> \n   \n\n<el-collapse v-model=\"activeNames\" @change=\"handleChange\">\n  <el-collapse-item title=\"fireBase 列表 \" name=\"1\">\n    <div>\n       <ul class=\"todo-list  \">\n        <li v-for=\"todo in todos\"\n            class=\"border-2 border-gray-200 rounded-full py-1 px-4 my-0.5\" > \n            <input type=\"text\" \n                    v-model=\"todo.text\" \n                    placeholder=\"Add new todo\"\n                    class=\"px-10 mx-1 py-1 rounded-full bg-gray-100 focus:ring-2 focus:ring-blue-600 \"  />  \n\n            <input type=\"text\" \n                    v-model=\"todo.name\" \n                    placeholder=\"Add new todo\"\n                    class=\"px-10 mx-1 py-1 rounded-full bg-gray-100 focus:ring-2 focus:ring-blue-600 \"  />  \n \n \n\n            <button class=\"text-ms font-blod text-red-100 m-1 px-3 py-0.5 ml-4 rounded-full bg-red-400\"\n                  @click=\"removeTodo(todo.key)\">刪除</button>\n\n            <button class=\"bg-green-500 text-gray-900  text-ms font-blod \n                          m-1 px-3 py-0.5 ml-4 rounded-full \n                          hover:bg-green-700 hover:text-gray-100  \"\n                  @click=\"updateTodo(todo.key,Todos)\">更新</button>   \n        </li> \n      </ul> \n\n    </div>\n  \n  </el-collapse-item>\n  <el-collapse-item title=\"尚未測試的 \" name=\"2\">\n    <!-- <div>控制反馈：通过界面样式和交互动效让用户可以清晰的感知自己的操作；</div>\n    <div>页面反馈：操作后，通过页面元素的变化清晰地展现当前状态。</div> -->\n  \n\n    \n    <div class=\"block\">\n      <span class=\"demonstration\">Display all tags (default)</span>\n      <el-cascader\n      v-model=\"value3\"\n        :options=\"options\"\n        :props=\"props\"\n        clearable></el-cascader>\n    </div>\n\n\n\n     <div class=\"block\">\n      <span class=\"demonstration\">Default</span>\n      <el-date-picker\n        v-model=\"value1\"\n        multiple\n        type=\"date\"\n        placeholder=\"Pick a day\">\n      </el-date-picker>\n    </div>\n\n  </el-collapse-item>\n\n <el-collapse-item title=\"新增工具 Add Tools\" name=\"3\">\n    <div class=\"grid grid-cols-2 gap-1\">\n  <div>\n    <form v-on:submit.prevent=\"addTodo\">\n    <input type=\"text\" \n           v-model=\"newTodo.text\" \n           placeholder=\"Add new todo\"\n           class=\"px-10 m-3 py-2 rounded-full bg-gray-100 \"\n           /> \n    <div class=\"block\">\n\n \n  <el-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">Check all</el-checkbox>\n  <div style=\"margin: 15px 0;\"></div>\n  <el-checkbox-group v-model=\"checkedCities\" @change=\"handleCheckedCitiesChange\">\n    <el-checkbox v-for=\"city in cities\" :label=\"city\" :key=\"city\">{{city}}</el-checkbox>\n  </el-checkbox-group> \n   \n\n      <!-- <span class=\"demonstration\"> 時間日期 </span>\n      <el-date-picker\n        v-model=\"newTodo.creatTime\"\n        type=\"date\"\n        placeholder=\"Pick a day\"\n        :picker-options=\"pickerOptions\">\n      </el-date-picker>  -->\n\n    </div>       \n  </form> \n  </div> \n  <div>\n    <button class=\"text-lg text-gray-100 m-3 px-3 py-0.5 ml-4 rounded-full bg-red-400\"\n            v-on:click=\"addTodo\">新增</button>    \n  </div>\n</div> \n</el-collapse-item>\n\n<!--\n  \n  <el-collapse-item title=\"可控 Controllability\" name=\"4\">\n    <div>用户决策：根据场景可给予用户操作建议或安全提示，但不能代替用户进行决策；</div>\n    <div>结果可控：用户可以自由的进行操作，包括撤销、回退和终止当前操作等。</div>\n  </el-collapse-item> -->\n</el-collapse> \n \n     \n      </div> \n    </div> \n  </div> \n</template>\n\n\n<script>\nimport { WordDataServiceEXP } from \"../services/TodoService\";\n// import {fb, db, datab} from '../firebase';\n// import TutorialDetails from \"./WordMdf\"; // 連接至 Mdf 的部分\n\n\nconst cityOptions = ['大瓶', '中瓶', 'Guangzhou', 'Shenzhen'];\n\nexport default {\n  name: \"tutorials-list\",\n  components: {   },\n  data() {\n    return {\n\n\nactiveNames: ['1'],\n// - - - -  \n\n         checkAll: false,\n        checkedCities: ['Shanghai', 'Beijing'],\n        cities: cityOptions,\n        isIndeterminate: true,\n\n        // - - - - \n      showModal:false,\n      g:\"\",\n      d:\"\",\n      v2:\"\",\n      todos: [], \n      newTodo:{ \n        text:\"\",\n        name:\"\",\n        creatTime: \"\", // Date \n        }, \n\n      // - - - - - \n\n      pickerOptions: {\n          disabledDate(time) {\n            return time.getTime() > Date.now();\n          },\n          shortcuts: [{\n            text: 'Today',\n            onClick(picker) {\n              picker.$emit('pick', new Date());\n            }\n          }, {\n            text: 'Yesterday',\n            onClick(picker) {\n              const date = new Date();\n              date.setTime(date.getTime() - 3600 * 1000 * 24);\n              picker.$emit('pick', date);\n            }\n          }, {\n            text: 'A week ago',\n            onClick(picker) {\n              const date = new Date();\n              date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\n              picker.$emit('pick', date);\n            }\n          }]\n        },\n        value1: '',\n        value2: '',\n        value3: '',\n         value33: new Date(),\n\n        // - - - - - -\n\n         props: { multiple: true },\n        options: [{\n          value: 1,\n          label: 'Asia',\n          children: [{\n            value: 2,\n            label: 'China',\n            children: [\n              { value: 3, label: 'Beijing' },\n              { value: 4, label: 'Shanghai' },\n              { value: 5, label: 'Hangzhou' }\n            ]\n          }, {\n            value: 6,\n            label: 'Japan',\n            children: [\n              { value: 7, label: 'Tokyo' },\n              { value: 8, label: 'Osaka' },\n              { value: 9, label: 'Kyoto' }\n            ]\n          }, {\n            value: 10,\n            label: 'Korea',\n            children: [\n              { value: 11, label: 'Seoul' },\n              { value: 12, label: 'Busan' },\n              { value: 13, label: 'Taegu' }\n            ]\n          }]\n        }, {\n          value: 14,\n          label: 'Europe',\n          children: [{\n            value: 15,\n            label: 'France',\n            children: [\n              { value: 16, label: 'Paris' },\n              { value: 17, label: 'Marseille' },\n              { value: 18, label: 'Lyon' }\n            ]\n          }, {\n            value: 19,\n            label: 'UK',\n            children: [\n              { value: 20, label: 'London' },\n              { value: 21, label: 'Birmingham' },\n              { value: 22, label: 'Manchester' }\n            ]\n          }]\n        }, {\n          value: 23,\n          label: 'North America',\n          children: [{\n            value: 24,\n            label: 'US',\n            children: [\n              { value: 25, label: 'New York' },\n              { value: 26, label: 'Los Angeles' },\n              { value: 27, label: 'Washington' }\n            ]\n          }, {\n            value: 28,\n            label: 'Canada',\n            children: [\n              { value: 29, label: 'Toronto' },\n              { value: 30, label: 'Montreal' },\n              { value: 31, label: 'Ottawa' }\n            ]\n          }]\n        }] \n    };\n  },\n  methods: { \n\n    handleCheckAllChange(val) {\n        this.checkedCities = val ? cityOptions : [];\n        this.isIndeterminate = false;\n      },\n      handleCheckedCitiesChange(value) {\n        let checkedCount = value.length;\n        this.checkAll = checkedCount === this.cities.length;\n        this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;\n      },\n    \n\n    // 這邊理解安排，看看todoList 相關參考的範例。\n    // https://codepen.io/Jasonjam/pen/WPBbGG\n\n    getTimeTrans(newTime) {\n\t\t\tif (typeof newTime === 'undefined') return;\n\t\t\tlet time = new Date(newTime);\n\t\t\tlet year = time.getFullYear();\n\t\t\tlet month = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"June\",\n\t\t\t\t\t\t\t \"July\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"]\n\t\t\tlet day = time.getDate();\n\t\t\tlet week = time.day = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat']\n\t\t\tlet hour = time.getHours();\n\t\t\tlet minute = time.getMinutes();\n\t\t\treturn month[time.getMonth()] + \"/\" + (parseInt(day, 10) < 10 ? '0' + day:day)  + \"/\" + year + \"<br> \" + hour + \":\" + (parseInt(minute, 10) < 10 ? '0' + minute : minute) + \"&nbsp;\" + week[time.getDay()];\n\t\t},\n     // Push new post in to Todos\n    \n    \n    addTodo(){  \n      var data ={ \n        text:this.newTodo.text,\n        creatTime:this.newTodo.creatTime,\n        name:this.newTodo.name, \n      };\n\n\n      WordDataServiceEXP.create(this.newTodo);\n      Swal.fire({\n              position: 'top',\n              icon: 'success',\n              title: '更新成功',\n              showConfirmButton: false,\n              timer: 1500\n            }); \n\n    },\n\n    // updateTutorial() {\n    //   const data = {\n    //     title: this.currentTutorial.title,\n    //     description: this.currentTutorial.description,\n    //   };\n\n    //   WordDataServiceEXP.update(this.currentTutorial.key, data)\n    //     .then(() => {\n    //       this.message = \"更新成功!\";\n    //     })\n    //     .catch((e) => {\n    //       console.log(e);\n    //     });\n    // }, \n\n\n    // WordDataServiceEXP.getAll().child(key).update(value);\n    \n      // Swal.fire({\n      //         position: 'top',\n      //         icon: 'success',\n      //         title: '更新成功'+ key +  'value = ' + value ,\n      //         showConfirmButton: false,\n      //         timer: 1500\n      //       }); \n\n      //  this..tmp_idx=\"\";\n      // this.currentTutorial.left_time=\"\";\n      // this.currentTutorial.memo=\"\";\n\n    updateTodo(key, data) {\n      \n\n      const v = {   \n        name: data.name, \n        text: data.text, \n      };\n\n      WordDataServiceEXP.update(key, v)\n        .then(() => {\n           Swal.fire({\n              position: 'top',\n              icon: 'success',\n              title: '更新成功'+ key +  'value = ' + value ,\n              showConfirmButton: false,\n              timer: 1500\n            });  \n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    // updateTodo(key, value) { \n      \n    //   WordDataServiceEXP.getAll().child(key).update(value);\n    //   Swal.fire({\n    //           position: 'top',\n    //           icon: 'success',\n    //           title: '更新成功',\n    //           showConfirmButton: false,\n    //           timer: 1500\n    //         }); \n    // },\n    // Remove child based on key - firebase function\n    removeTodo(key) {  \n      Swal.fire({\n            title: '真的嗎?',\n            text: \"請確認是否移除資料!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: '執行刪除!',\n            cancelButtonText: '取消',\n          }).then((result) => {\n            if (result.isConfirmed) {\n              Swal.fire(\n                '刪除成功!',\n                '你的資料，已完成刪除.',\n                'success'\n              ),\n              WordDataServiceEXP.getAll().child(key).remove()\n            }\n          }) \n    }, \n    \n    onDataChange(items) {\n        let _tutorials = [];  \n        items.forEach((item) => {\n          let key = item.key;\n          let data = item.val();\n          _tutorials.push({\n            key: key, \n            text     : data.text, \n            creatTime: data.creatTime,\n            name: data.name,\n            pd_500: data.pd_500,\n          });\n        });\n        this.todos = _tutorials; \n    },  \n    \n\n    getTime(key){\n      var today = new Date(); \n      var day = today.getDate();\n      var month = today.getMonth() + 1;\n      var year = today.getFullYear();\n      let weekary_En = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n      let weekary_Cn = ['日','一','二','三','四','五','六'];\n\n      let preweek = today.getDay(); \n\t\t\tlet week = weekary_Cn[preweek] ;  \n\n    // - - - - - \n    let str = ''; \n\n       \n      if( key == \"En\"){  str = year+\"-\"+month+\"-\"+day+\"(\"+weekary_En[preweek]+\")\" ; }\n      else if( key == 'Cn'){  str = year+\"-\"+month+\"-\"+day+\"(\"+weekary_Cn[preweek]+\")\" ; }\n      else{ str = today }\n    return str\n\n    \n\n    },\n\n// - - - - 協助這個東西是在修飾 的部分 - - \n    handleChange(val) {\n        console.log(val);\n      }\n  },\n  watch: {\n     \n    // tutorial: function(tutorial) {\n    //   this.currentTutorial = { ...tutorial };\n    //   this.message = \"\";\n    // },\n  },\n  computed: {\n    famous: function() {\n      return this.stories.filter(function(item) {\n        return item.upvotes > 30;\n      })\n    },\n    Daychker: function(Mon,Day) {\n      return this.todo.filter(function(item) {\n        return item.creatTime == '2021-12-02';\n      })\n    },\n    poschker_1: function() {\n      return this.odrList.filter(function(item) {\n        return item.NowPos == 1;\n      })\n    },\n    poschker_2: function() {\n      return this.odrList.filter(function(item) {\n        return item.NowPos == 2;\n      })\n    },\n    poschker_3: function() {\n      return this.odrList.filter(function(item) {\n        return item.NowPos == 3;\n      })\n    }\n  },\n  mounted() {\n    this.g=this.getTime();\n    WordDataServiceEXP.getAll().on(\"value\", this.onDataChange); \n  },\n  beforeDestroy() {\n    WordDataServiceEXP.getAll().off(\"value\", this.onDataChange);\n  }\n}; \n\n</script>\n\n<style scoped>\n\n\n</style>\n\n\n\n"]}]}